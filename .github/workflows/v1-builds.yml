name: V1 Builds

on:
  push:
    branches:
    - 'v1-**'
    paths-ignore:
    - data/**
    - docs/**
    - '**/*.md'
  pull_request:
    branches:
    - 'v1-**'
    paths-ignore:
    - data/**
    - docs/**
    - '**/*.md'

jobs:
  build:

    name: ${{ matrix.machine.cfg }}
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false # Allow all boards to finish building
      matrix:
        machine:
        - cfg: MP3DP/MRambo_16T_aero
          env: megaatmega2560
          out: firmware.hex
        - cfg: MP3DP/Ramps_16T_MK
          env: megaatmega2560
          out: firmware.hex
        #- cfg: MPCNC/Archim1_T8_16T_LCD
        #  env: DUE
        #  out: firmware.bin
        #- cfg: MPCNC/Archim1_T8_16T_LCD_DualEndstop
        #  env: DUE
        #  out: firmware.bin
        #- cfg: MPCNC/Archim2_T8_16T_LCD_16step
        #  env: DUE
        #  out: firmware.bin
        - cfg: MPCNC/MRambo_T8_16T_LCD
          env: megaatmega2560
          out: firmware.hex
        - cfg: MPCNC/Rambo_T8_16T_LCD
          env: megaatmega2560
          out: firmware.hex
        - cfg: MPCNC/Rambo_T8_16T_LCD_DualEndstop
          env: megaatmega2560
          out: firmware.hex
        - cfg: MPCNC/Ramps_T8_16T_LCD_32step
          env: megaatmega2560
          out: firmware.hex
        - cfg: MPCNC/Ramps_T8_16T_LCD_32step_DualEndstop
          env: megaatmega2560
          out: firmware.hex
        - cfg: ZenXY/MiniRambo_16T
          env: megaatmega2560
          out: firmware.hex
        - cfg: ZenXY/Ramps_16T_LCD_32
          env: megaatmega2560
          out: firmware.hex

    steps:
    - name: Check out the code
      uses: actions/checkout@v2

    # Based on .github/workflows/test-builds.yml
    - name: Select Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: '3.7' # Version range or exact version of a Python version to use, using semvers version range syntax.
        architecture: 'x64' # optional x64 or x86. Defaults to x64 if not specified

    - name: Install PlatformIO
      run: |
        pip install -U https://github.com/platformio/platformio-core/archive/master.zip
        platformio update

    - name: Build ${{ matrix.machine.cfg }}
      run: |
        chmod +x buildroot/bin/*
        chmod +x buildroot/share/tests/*
        v1-scripts/build-for-machine ${{ matrix.machine.cfg }} -e ${{ matrix.machine.env }}
    - name: zip
      run: |
        mkdir -p .zips/{MPCNC,MP3DP,ZenXY}
        zip -j .zips/${{ matrix.machine.cfg }}.zip .pio/build/${{ matrix.machine.env }}/${{ matrix.machine.out }}
        zip .zips/${{ matrix.machine.cfg }}.zip Marlin/Configuration* Marlin/_Bootscreen.h
    - name: Release
      uses: ncipollo/release-action@v1
      with:
        artifacts: ".zips/${{ matrix.machine.cfg }}.zip"
        #bodyFile: "body.md"
        token: ${{ secrets.GITHUB_TOKEN }}
        prerelease: true
        name: unstable
        #tag: wft-latest
        commit: ${{ github.ref }}
        allowUpdates: true
